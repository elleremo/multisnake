{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/Core/Types.js","webpack:///./src/js/Core/game.js","webpack:///./src/js/Core/level.js","webpack:///./src/js/Core/player.js","webpack:///./src/js/Core/render.js","webpack:///./src/js/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;AACA,gDAAwC;AACxC;AACA,8CAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAG;AACH;AACA;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAiC;AACC;AACD;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAAK;AAC9B,0BAA0B,8CAAM;AAChC;AACA,0BAA0B,6CAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgB;;;;;;;;;;;;;ACnDhB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACiB;;;;;;;;;;;;;ACPjB;AAAA;AAAA;AAAA,CAA+D;AACxD;AACP;AACA;AACA;AACA;AACA,uBAAuB,6CAAM;AAC7B,uBAAuB,0CAAG,CAAC,gDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAAI;AACZ,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA,wBAAwB,2CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wCAAwC,gDAAS;AACjD;AACA;AACA;AACA;AACA,wCAAwC,gDAAS;AACjD;AACA;AACA;AACA;AACA,wCAAwC,gDAAS;AACjD;AACA;AACA;AACA;AACA,wCAAwC,gDAAS;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACxGA;AAAA;AAAA,CAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA,CAAoC;AACpC;AACA,eAAe,+CAAI;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// webpack-livereload-plugin\n \t(function() {\n \t  if (typeof window === \"undefined\") { return };\n \t  var id = \"webpack-livereload-plugin-script-cbf52085335621d0\";\n \t  if (document.getElementById(id)) { return; }\n \t  var el = document.createElement(\"script\");\n \t  el.id = id;\n \t  el.async = true;\n \t  el.src = \"//\" + location.hostname + \":35729/livereload.js\";\n \t  document.getElementsByTagName(\"head\")[0].appendChild(el);\n \t}());\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","﻿export class Cell {\r\n    constructor(x, y, color) {\r\n        this.pos = new Vector(0, 0);\r\n        this._color = '#000';\r\n        this.comp = 3;\r\n        this.isTurn = false;\r\n        this.pos = new Vector(x, y);\r\n        this._color = color;\r\n    }\r\n    color(color) {\r\n        this._color = color;\r\n        this.on();\r\n    }\r\n    off() {\r\n        let step = this.props.step;\r\n        let x = this.pos.x * step + 2;\r\n        let y = this.pos.y * step + 2;\r\n        step = step - 4;\r\n        this.props.ctx.clearRect(x, y, step, step);\r\n        this.isTurn = false;\r\n    }\r\n    on() {\r\n        this.props.ctx.fillStyle = this._color;\r\n        let step = this.props.step;\r\n        let x = this.pos.x * step + this.comp;\r\n        let y = this.pos.y * step + this.comp;\r\n        step = step - this.comp * 2;\r\n        this.props.ctx.fillRect(x, y, step, step);\r\n        this.isTurn = true;\r\n        return this;\r\n    }\r\n}\r\nexport class VGrid {\r\n    constructor(amountX, amountY) {\r\n        this.amountX = amountX;\r\n        this.amountY = amountY;\r\n        this.createMatrix();\r\n    }\r\n    createMatrix() {\r\n        let matrix = [];\r\n        for (var x = 0; x < this.amountX; x++) {\r\n            matrix[x] = [0];\r\n            for (var y = 0; y < this.amountY; y++) {\r\n                matrix[x][y] = 0;\r\n            }\r\n        }\r\n        this.matrix = matrix;\r\n    }\r\n}\r\nexport class Vector {\r\n    constructor(x, y) {\r\n        this._length = 0;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    set length(value) {\r\n        this._length = value;\r\n    }\r\n    get length() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n}\r\nexport var Direction;\r\n(function (Direction) {\r\n    Direction[\"UP\"] = \"UP\";\r\n    Direction[\"LEFT\"] = \"LEFT\";\r\n    Direction[\"DOWN\"] = \"DOWN\";\r\n    Direction[\"RIGHT\"] = \"RIGHT\";\r\n})(Direction || (Direction = {}));\r\nexport class Dir extends Vector {\r\n    constructor(dir) {\r\n        super(1, 0);\r\n        switch (dir) {\r\n            case Direction.UP:\r\n                this.up();\r\n                break;\r\n            case Direction.DOWN:\r\n                this.down();\r\n                break;\r\n            case Direction.LEFT:\r\n                this.left();\r\n                break;\r\n            case Direction.RIGHT:\r\n                this.right();\r\n                break;\r\n        }\r\n    }\r\n    up() {\r\n        this.status = Direction.UP;\r\n        this.x = 0;\r\n        this.y = -1;\r\n    }\r\n    down() {\r\n        this.status = Direction.DOWN;\r\n        this.x = 0;\r\n        this.y = 1;\r\n    }\r\n    left() {\r\n        this.status = Direction.LEFT;\r\n        this.x = -1;\r\n        this.y = 0;\r\n    }\r\n    right() {\r\n        this.status = Direction.RIGHT;\r\n        this.x = 1;\r\n        this.y = 0;\r\n    }\r\n}\r\nexport class Rect extends Vector {\r\n}\r\n","﻿import { Level } from \"./level\";\r\nimport { Render } from \"./render\";\r\nimport { Snake } from \"./player\";\r\nclass Setting {\r\n    constructor(setting) {\r\n        this.gridSize = 20;\r\n        this.step = 20;\r\n        this.speed = 1;\r\n        this.snakeLength = 5;\r\n        this.canvas = setting.canvas;\r\n        this.ctx = setting.canvas.getContext(\"2d\");\r\n        this.step = setting.step;\r\n        this.gridSize = setting.gridSize;\r\n        this.snakeLength = setting.snakeLength;\r\n        this.speed = setting.speed;\r\n    }\r\n    set newGridSize(value) {\r\n        this.gridSize = value;\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n    }\r\n    set newStep(value) {\r\n        this.step = value;\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n    }\r\n    get width() {\r\n        return this.gridSize * this.step;\r\n    }\r\n    get height() {\r\n        return this.gridSize * this.step;\r\n    }\r\n}\r\nclass Game {\r\n    constructor(set) {\r\n        this.setting = new Setting(set);\r\n        this.level = new Level(this.setting);\r\n        this.render = new Render(this.setting);\r\n        this.resizeCanvas(this.setting.gridSize, this.setting.step);\r\n        this.player = new Snake(this.setting);\r\n        this.player.draw();\r\n        this.player.animate();\r\n    }\r\n    start() {\r\n    }\r\n    resizeCanvas(gridSize, step) {\r\n        this.setting.newStep = step;\r\n        this.setting.newGridSize = gridSize;\r\n        this.render.drawGrid();\r\n    }\r\n}\r\nexport { Game };\r\n","﻿class Level {\r\n    constructor(props) {\r\n        this.props = {};\r\n        this.props = props;\r\n        console.log('From LEVEL');\r\n    }\r\n}\r\nexport { Level };\r\n","﻿import { Cell, Dir, Direction, VGrid, Vector } from \"./Types\";\r\nexport class Snake {\r\n    constructor(props) {\r\n        this.id = -1;\r\n        this.bodyColor = '#5c98c9';\r\n        this.headColor = '#bd63e4';\r\n        this.pos = new Vector(5, 1);\r\n        this.dir = new Dir(Direction.RIGHT);\r\n        this.body = [];\r\n        console.log(this);\r\n        Snake.CountSnakes += 1;\r\n        this.id += 1;\r\n        this.props = props;\r\n        this.size = this.props.step;\r\n        this.speed = 1000 / props.speed;\r\n        this.snakeLength = props.snakeLength;\r\n        Cell.prototype.props = this.props;\r\n        this.vgrid = new VGrid(this.props.gridSize, this.props.gridSize);\r\n        this.generate();\r\n        this.addKeyEvent();\r\n    }\r\n    generate() {\r\n        for (let i = 0; i < this.snakeLength; i++) {\r\n            let x = this.pos.x - this.snakeLength + i;\r\n            let y = this.pos.y;\r\n            let color = this.bodyColor;\r\n            if (i == this.snakeLength - 1)\r\n                color = this.headColor;\r\n            let o = new Cell(x, y, color);\r\n            this.body.push(o);\r\n        }\r\n        this.draw();\r\n        console.log('GEN', this.vgrid);\r\n    }\r\n    draw() {\r\n        for (var cell in this.body) {\r\n            this.body[cell].on();\r\n        }\r\n    }\r\n    move() {\r\n        var v;\r\n        this.pos.x += this.dir.x;\r\n        this.pos.y += this.dir.y;\r\n        console.log('Body: ', this.body);\r\n    }\r\n    isCrash() {\r\n        let head = this.body[this.body.length - 1].pos;\r\n        for (let index in this.body) {\r\n            let i = +index;\r\n            if (i !== (this.body.length - 1) && this.body[i].isTurn) {\r\n                if (head.x == this.body[i].pos.x && head.y == this.body[i].pos.y) {\r\n                    alert('Столкновение');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    animate() {\r\n        let o = this;\r\n        function f() {\r\n            o.draw();\r\n        }\r\n        setTimeout(f, this.speed);\r\n    }\r\n    addKeyEvent() {\r\n        let o = this;\r\n        let Keys;\r\n        (function (Keys) {\r\n            Keys[\"UP\"] = \"KeyW\";\r\n            Keys[\"LEFT\"] = \"KeyA\";\r\n            Keys[\"DOWN\"] = \"KeyS\";\r\n            Keys[\"RIGHT\"] = \"KeyD\";\r\n        })(Keys || (Keys = {}));\r\n        let speed = o.speed;\r\n        window.document.addEventListener(\"keyup\", (e) => {\r\n            if (e.code == Keys.DOWN || Keys.UP || Keys.LEFT || Keys.RIGHT) {\r\n                o.speed = speed;\r\n            }\r\n        });\r\n        window.document.addEventListener('keydown', (e) => {\r\n            switch (e.code) {\r\n                case Keys.UP:\r\n                    if (o.dir.status == Direction.DOWN)\r\n                        break;\r\n                    o.dir.up();\r\n                    break;\r\n                case Keys.LEFT:\r\n                    if (o.dir.status == Direction.RIGHT)\r\n                        break;\r\n                    o.dir.left();\r\n                    break;\r\n                case Keys.DOWN:\r\n                    if (o.dir.status == Direction.UP)\r\n                        break;\r\n                    o.dir.down();\r\n                    break;\r\n                case Keys.RIGHT:\r\n                    if (o.dir.status == Direction.LEFT)\r\n                        break;\r\n                    o.dir.right();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\nSnake.CountSnakes = 0;\r\n","﻿export class Render {\r\n    constructor(setting) {\r\n        this.setting = setting;\r\n    }\r\n    clearGrid() {\r\n        this.setting.ctx.clearRect(0, 0, this.setting.width, this.setting.height);\r\n        console.log(\"clearGrid\");\r\n    }\r\n    drawGrid() {\r\n        this.clearGrid();\r\n        let step = this.setting.step;\r\n        let ctx = this.setting.ctx;\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = '#aec2dc';\r\n        for (let i = 0; i < this.setting.gridSize; i++) {\r\n            ctx.moveTo(i * step, 0);\r\n            ctx.lineTo(i * step, this.setting.height);\r\n            ctx.stroke();\r\n        }\r\n        for (var i = 0; i < this.setting.gridSize; i++) {\r\n            ctx.moveTo(0, i * step);\r\n            ctx.lineTo(this.setting.width, i * step);\r\n            ctx.stroke();\r\n        }\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.strokeRect(0, 0, this.setting.width, this.setting.height);\r\n        console.log(\"DrawGrid\");\r\n    }\r\n}\r\n","﻿import { Game } from \"./Core/game\";\r\nlet canvas = document.querySelector(\"canvas\");\r\nlet game = new Game({\r\n    canvas: canvas,\r\n    gridSize: 20,\r\n    step: 20,\r\n    speed: 5,\r\n    snakeLength: 5,\r\n});\r\n"],"sourceRoot":""}